generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id Int @id @default(autoincrement())
}

model user {
  id            Int     @id @default(autoincrement())
  username      String  @unique @db.VarChar(50)
  password      String  @db.VarChar(255)
  name          String? @db.VarChar(100)
  email_address String? @db.VarChar(255)
  phone_number  String? @db.VarChar(50)
  refresh_token String? @db.VarChar(255)
}

model administrator {
  id               Int         @id @default(autoincrement())
  user_id          Int?
  organization_id  Int?
  business_unit_id Int?
  business_unit    business_unit? @relation(fields: [business_unit_id], references: [id])
  organization     organization?  @relation(fields: [organization_id], references: [id])
}

model address {
  id                             Int         @id @default(autoincrement())
  street                         String
  city                           String
  state                          String
  country                        String
  post_code                      Int
  is_billing_and_invoice_address Boolean
  is_delivery_address            Boolean
  user_id                        Int?
  organization_id                Int?
  business_unit_id               Int?
  customer_id                    Int?
  business_unit                  business_unit? @relation(fields: [business_unit_id], references: [id])
  customer                       customer?      @relation(fields: [customer_id], references: [id])
  organization                   organization?  @relation(fields: [organization_id], references: [id])
}

model organization {
  id             Int          @id @default(autoincrement())
  name           String          @unique @db.VarChar(50)
  email          String?         @unique @db.VarChar(255)
  address        address[]
  administrators administrator[]
}

model business_unit {
  id             Int          @id @default(autoincrement())
  name           String          @unique @db.VarChar(50)
  email          String          @db.VarChar(255)
  description    String          @db.VarChar(255)
  addresses      address[]
  administrators administrator[]
  content        content[]
  customer       customer[]
}

model customer {
  id               Int            @id @default(autoincrement())
  name             String            @unique @db.VarChar(50)
  email            String            @unique @db.VarChar(255)
  description      String            @db.VarChar(255)
  business_unit_id Int
  business_unit    business_unit     @relation(fields: [business_unit_id], references: [id])
  addresses        address[]
  claim            claim[]
  device           customer_device[]
}

model device {
  id               Int            @id @default(autoincrement())
  name             String            @unique @db.VarChar(50)
  device_brand     String            @db.VarChar(50)
  device_model     String            @db.VarChar(50)
  service_order_id Int?
  customers        customer_device[]
  service_orders   service_order[]
}

model customer_device {
  id          Int   @id @default(autoincrement())
  device_id   Int
  customer_id Int
  customer    customer @relation(fields: [customer_id], references: [id])
  device      device   @relation(fields: [device_id], references: [id])
}

model service_order {
  id                    Int                 @id @default(autoincrement())
  name                  String
  operation             String
  device_id             Int
  device                device                 @relation(fields: [device_id], references: [id])
  inspection_checklists inspection_checklist[]
  service_order_jobs    service_order_job[]
}

model service_order_job {
  id               Int        @id @default(autoincrement())
  service_order_id Int
  service_order    service_order @relation(fields: [service_order_id], references: [id])
}

model inspection_checklist {
  id               Int        @id @default(autoincrement())
  name             String
  service_order_id Int
  service_order    service_order @relation(fields: [service_order_id], references: [id])
}

model claim {
  id          Int   @id @default(autoincrement())
  name        String
  customer_id Int
  customer    customer @relation(fields: [customer_id], references: [id])
}

model content {
  id               Int        @id @default(autoincrement())
  name             String
  expire_on        DateTime
  description      String
  publish_on       DateTime
  business_unit_id Int
  html_content     String
  business_unit    business_unit @relation(fields: [business_unit_id], references: [id])
}
